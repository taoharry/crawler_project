[unix_http_server]
file=/home/harry/ENV/crawler_project/stmp/supervisor.sock   ; UNIX socket 文件，supervisorctl 会使用
chmod=0700
chown=harry:harry

[supervisord]
logfile=/home/harry/ENV/crawler_project/stmp/supervisord.log ; 日志文件，默认是 $CWD/supervisord.log
logfile_maxbytes=50MB        ; 日志文件大小，超出会 rotate，默认 50MB
logfile_backups=10           ; 日志文件保留备份数量默认 10
loglevel=info                ; 日志级别，默认 info，其它: debug,warn,trace
pidfile=/tmp/supervisord.pid ; pid 文件
nodaemon=false               ; 是否在前台启动，默认是 false，即以 daemon 的方式启动
minfds=1024                  ; 可以打开的文件描述符的最小值，默认 1024
minprocs=200                 ; 可以打开的进程数的最小值，默认 200

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///home/harry/ENV/crawler_project/stmp/supervisor.sock ; 通过 UNIX socket 连接 supervisord，路径与 unix_http_server 部分的 file 一致
;serverurl=http://127.0.0.1:9001 ; 通过 HTTP 的方式连接 supervisord


;[include]
;files = relative/directory/*.ini    ; 可以是 *.conf 或 *.ini

[program:flaskweb]
directory=/home/harry/ENV/crawler_project ; 程序的启动目录
command=python flask_web/flask_web.py  ; 启动命令
process_name=%(program_name)s ; 进程名，默认为%(program_name)s
autostart=true     ; 在 supervisord 启动的时候也自动启动
startsecs=5        ; 启动 5 秒后没有异常退出，就当作已经正常启动了
autorestart=true   ; 程序异常退出后自动重启
startretries=3     ; 启动失败自动重试次数，默认是 3
user=harry          ; 用哪个用户启动
redirect_stderr = true  ; 把 stderr 重定向到 stdout，默认 false
stdout_logfile_maxbytes = 20MB  ; stdout 日志文件大小，默认 50MB
stdout_logfile_backups = 20     ; stdout 日志文件备份数
; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）
stdout_logfile=/home/harry/ENV/crawler_project/stmp/usercenter_stdout.log

[program:daily]
directory=/home/harry/ENV/crawler_project ; 程序的启动目录
command=python daily.py  ; 启动命令
process_name=%(program_name)s ; 进程名，默认为%(program_name)s
autostart=true     ; 在 supervisord 启动的时候也自动启动
startsecs=5        ; 启动 5 秒后没有异常退出，就当作已经正常启动了
autorestart=true   ; 程序异常退出后自动重启
startretries=3     ; 启动失败自动重试次数，默认是 3
user=harry          ; 用哪个用户启动
redirect_stderr = true  ; 把 stderr 重定向到 stdout，默认 false
stdout_logfile_maxbytes = 20MB  ; stdout 日志文件大小，默认 50MB
stdout_logfile_backups = 20     ; stdout 日志文件备份数
; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）
stdout_logfile=/home/harry/ENV/crawler_project/stmp/usercenter_stdout.log